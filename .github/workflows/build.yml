name: Build

on:
  push:
    branches:
      - master
  release:
    types:
      - published

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Create version file
        run: make version

      - name: Store version file
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: target/dist/common/lib/peppol/version
          retention-days: 1

  linux:
    name: Linux distribution
    runs-on: ubuntu-latest
    needs: init

    strategy:
      matrix:
        arch:
          - amd64
          - arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Prepare version labels
        uses: k15g/action-version-labels@v1
        with:
          prefix: project

      - name: Fetch version file
        uses: actions/download-artifact@v1
        with:
          name: version
          path: target/dist/common/lib/peppol/version

      - name: Prepare files
        env:
          GITHUB_USERNAME: ${{ secrets.SUDO_GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.SUDO_GITHUB_TOKEN }}
        run: make clean fetch-linux-${{ matrix.arch }} version

      - name: Build tar.gz
        run: make package-linux-${{ matrix.arch }}-tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: target/pkg/linux-${{ matrix.arch }}.tar.gz
          retention-days: 1

      - name: Upload tar.gz
        uses: k15g/action-github-asset-upload@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file: target/pkg/linux-${{ matrix.arch }}.tar.gz
          name: pdk-linux-${{ matrix.arch }}-${{ env.PROJECT_VERSION }}.tar.gz
          label: Linux Package (${{ matrix.arch }})

  linux-deb:
    name: Debian package
    runs-on: ubuntu-latest
    needs: linux

    strategy:
      matrix:
        arch:
          - amd64
          
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: linux
          path: target/pkg

      - name: Prepare version labels
        uses: k15g/action-version-labels@v1
        with:
          prefix: project

      - name: Fetch version file
        uses: actions/download-artifact@v1
        with:
          name: version
          path: target/dist/common/lib/peppol/version

      - name: Build Debian package
        run: make package-linux-${{ matrix.arch }}-deb

      - name: Upload Debian package
        uses: k15g/action-github-asset-upload@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file: target/pkg/linux-${{ matrix.arch }}.deb
          name: pdk-linux-${{ matrix.arch }}-${{ env.PROJECT_VERSION }}.deb
          label: Linux DEB Package (${{ matrix.arch }})

  linux-rpm:
    name: RPM package
    runs-on: ubuntu-latest
    needs: linux

    strategy:
      matrix:
        arch:
          - amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      
      - name: Prepare version labels
        uses: k15g/action-version-labels@v1
        with:
          prefix: project

      - name: Fetch version file
        uses: actions/download-artifact@v1
        with:
          name: version
          path: target/dist/common/lib/peppol/version

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: linux
          path: target/pkg

      - name: Build RPM package
        run: make package-linux-${{ matrix.arch }}-rpm

      - name: Upload RPM package
        uses: k15g/action-github-asset-upload@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file: target/pkg/linux-${{ matrix.arch }}.rpm
          name: pdk-linux-${{ matrix.arch }}-${{ env.PROJECT_VERSION }}.rpm
          label: Linux RPM Package (${{ matrix.arch }})

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: linux

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Prepare version labels
        uses: k15g/action-version-labels@v1
        with:
          prefix: project

      - name: Fetch version file
        uses: actions/download-artifact@v1
        with:
          name: version
          path: target/dist/common/lib/peppol/version

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: linux
          path: target/pkg

      - name: Build Docker image
        run: make docker-build
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2
      - name: Login manually
        id: login-ecr
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push edge image
        run: make docker-push tag="public.ecr.aws/openpeppol/pdk:edge"

      - name: Push tagged image
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          make docker-push tag="public.ecr.aws/openpeppol/pdk:${{ env.PROJECT_VERSION }}"
          make docker-push tag="public.ecr.aws/openpeppol/pdk:latest"

  macos:
    name: MacOS distribution
    runs-on: ubuntu-latest
    needs: init

    strategy:
      matrix:
        arch:
          - amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Prepare version labels
        uses: k15g/action-version-labels@v1
        with:
          prefix: project

      - name: Fetch version file
        uses: actions/download-artifact@v1
        with:
          name: version
          path: target/dist/common/lib/peppol/version

      - name: Prepare files
        env:
          GITHUB_USERNAME: ${{ secrets.SUDO_GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.SUDO_GITHUB_TOKEN }}
        run: make clean fetch-macos-${{ matrix.arch }} version

      - name: Build tar.gz
        run: make package-macos-${{ matrix.arch }}-tar

      - name: Build app
        run: make package-macos-${{ matrix.arch }}-app

      - name: Build brew formula
        run: make package-macos-${{ matrix.arch }}-brew

      - name: List packages
        run: ls -lh target/pkg

      - name: Upload tar.gz
        uses: k15g/action-github-asset-upload@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file: target/pkg/macos-${{ matrix.arch }}.tar.gz
          name: pdk-macos-${{ matrix.arch }}-${{ env.PROJECT_VERSION }}.tar.gz
          label: MacOS Package (${{ matrix.arch }})

      - name: Upload app
        uses: k15g/action-github-asset-upload@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file: target/pkg/macos-${{ matrix.arch }}.app.tar.gz
          name: pdk-macos-${{ matrix.arch }}-${{ env.PROJECT_VERSION }}.app.tar.gz
          label: MacOS App Package (${{ matrix.arch }})

      - name: Upload brew formula
        uses: k15g/action-github-asset-upload@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file: target/pkg/peppol-pdk.rb
          name: peppol-pdk.rb
          label: MacOS Brew Formula

  windows:
    name: Windows distribution
    runs-on: ubuntu-latest
    needs: init

    strategy:
      matrix:
        arch:
          - amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Prepare version labels
        uses: k15g/action-version-labels@v1
        with:
          prefix: project

      - name: Fetch version file
        uses: actions/download-artifact@v1
        with:
          name: version
          path: target/dist/common/lib/peppol/version

      - name: Prepare files
        env:
          GITHUB_USERNAME: ${{ secrets.SUDO_GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.SUDO_GITHUB_TOKEN }}
        run: make clean fetch-win-${{ matrix.arch }} version

      - name: Build zip
        run: make package-win-${{ matrix.arch }}-zip

      #- name: Build Windows Installer
      #  run: make package-win-${{ matrix.arch }}-wix

      - name: List packages
        run: ls -lh target/pkg

      - name: Upload zip
        uses: k15g/action-github-asset-upload@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file: target/pkg/win-${{ matrix.arch }}.zip
          name: pdk-win-${{ matrix.arch }}-${{ env.PROJECT_VERSION }}.zip
          label: Windows Package (${{ matrix.arch }})

    #  - name: Upload Windows Installer
    #    uses: k15g/action-github-asset-upload@v1
    #    if: startsWith(github.ref, 'refs/tags/v')
    #    with:
    #      token: ${{ secrets.GITHUB_TOKEN }}
    #      file: target/pkg/win64.msi
    #      name: pdk-win-${{ matrix.arch }}-${{ env.PROJECT_VERSION }}.msi
    #      label: Windows Installer (${{ matrix.arch }})
