<?xml version="1.0" encoding="UTF-8"?>
<project name="template" default="all"
    xmlns:if="ant:if">

    <!-- Make available environment variables if not defined in the project build file -->
    <property environment="env"/>
    
    <!-- Default properties -->
    <property name="docsDir" value="docs"/>
    <property name="targetDir" value="target" />

    <!-- Include mixins -->
    <import file="../mixins/asciidoctor.xml"/>
    <import file="../mixins/jruby.xml"/>
    <import file="../mixins/saxon.xml"/>
    <import file="../mixins/vefa-structure.xml"/>
    <import file="../mixins/vefa-validator.xml"/>

    <!--
        Main targets
    -->

    <!-- Delete target folder -->
    <target name="clean">
        <!-- Delete target folder -->
        <delete dir="${targetDir}"/>
    </target>

    <!-- Trigger build targets -->
    <target name="all" depends="init,build,test,docs,site,package"/>

    <!--
        Init targets
    -->
    <target name="init" depends="init-pre,init-perform,init-post"/>
    <target name="init-pre"/>
    <target name="init-perform">
        <!-- Create target folder -->
        <mkdir dir="${targetDir}"/>

        <!-- TODO Create build environment file if it doesn't exists. -->
    </target>
    <target name="init-post" />

    <!--
        Build targets
    -->
    <target name="build" depends="build-pre,build-perform,build-post"/>
    <target name="build-pre"/>
    <target name="build-perform">
        <!-- Trigger VEFA Structure -->
        <available file="project.xml" property="present"/>
        <structure-build if:true="${present}" />
    </target>
    <target name="build-post"/>

    <!--
        Test targets
    -->
    <target name="test" depends="test-pre,test-perform,test-post"/>
    <target name="test-pre"/>
    <target name="test-perform">
        <!-- Triggering build with vefa-validator. -->
        <available file="rules" type="dir" property="present"/>
        <validator-build scope="rules,${docsDir}" if:true="${present}"/>
    </target>
    <target name="test-post"/>

    <!--
        Documentation targets
    -->
    <target name="docs" depends="docs-pre,docs-perform,docs-post"/>
    <target name="docs-pre"/>
    <target name="docs-perform">
        <!-- Parse "main.adoc" files and copy folders containing ".adocassets" files. -->
        <available file="${docsDir}" type="dir" property="present"/>
        <asciidoctor-guided
            source="${docsDir}"
            target="target/site"
            if:true="${present}"/>
    </target>
    <target name="docs-post"/>

    <!--
        Site targets
    -->
    <target name="site" depends="site-pre,site-perform,site-post"/>
    <target name="site-pre"/>
    <target name="site-perform">
        <available file="${targetDir}/hugo" property="present"/>
        <exec
            executable="${env.PDK_PATH}/lib/hugo/hugo"
            failonerror="true"
            osfamily="unix"
            if:true="present">
            <arg value="-s"/>
            <arg value="${targetDir}/hugo"/>
            <arg value="-d"/>
            <arg value="${targetDir}/site"/>
            <arg value="--minify"/>
        </exec>
        <exec
            executable="${env.PDK_PATH}\lib\hugo\hugo.exe"
            failonerror="true"
            osfamily="windows"
            if:true="present">
            <arg value="-s"/>
            <arg value="${targetDir}/hugo"/>
            <arg value="-d"/>
            <arg value="${targetDir}/site"/>
            <arg value="--minify"/>
        </exec>
    </target>
    <target name="site-post"/>

    <!-- 
        Packaging targets
    -->
    <target name="package" depends="package-pre,package-perform,package-post"/>
    <target name="package-pre"/>
    <target name="package-perform"/>
    <target name="package-post"/>

</project>